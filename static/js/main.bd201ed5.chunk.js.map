{"version":3,"sources":["Todo/Todo.jsx","redux/reducerTodo.js","Todo/TodoContainer.jsx","App.js","redux/redux-store.js","index.js"],"names":["Todo","props","callHandleDeleteProduct","recipe","handleDeleteProduct","className","onSubmit","e","preventDefault","handleClick","bind","action","type","onChange","text","target","value","handleChangeProduct","product","placeholder","el","count","handleChangeCount","price","handleChangePrice","sum","recipes","map","key","id","onClick","initialState","reducerTodo","state","newState","filter","currentRecipe","TodoContainer","connect","todo","dispatch","CHANGE_PRODUCT_CREATOR","CHANGE_COUNT_CREATOR","DELETE_PRODUCT_CREATOR","CHANGE_PRICE_CREATOR","handleCalculateAllProduct","App","reducer","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd201ed5.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Todo.scss'\r\n\r\nconst Todo = (props) => {\r\n    const callParentClick = (e) => {\r\n        e.preventDefault()\r\n        props.handleClick()\r\n    }\r\n    const callParentChange = (e) => {\r\n        let text = e.target.value\r\n        props.handleChangeProduct(text)\r\n    }\r\n    const callHandleChangeCount = (el) => {\r\n        let count = el.target.value;\r\n        props.handleChangeCount(count)\r\n    }\r\n    const callHandleDeleteProduct = (recipe) => {\r\n        props.handleDeleteProduct(recipe)\r\n    }\r\n    const callHandleChangePrice = (e) => {\r\n        let price = e.target.value;\r\n        props.handleChangePrice(price)\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-wrap\">\r\n            <div className=\"christmas\"></div>\r\n            <h1 className=\"title\">Продукты на НОВОГОДНИЕ ПРАЗНИКИ</h1>\r\n            <form onSubmit={callParentClick.bind(this)} action=\"\">\r\n                <input type=\"text\"\r\n                       onChange={callParentChange.bind(this)}\r\n                       value={props.product}\r\n                       placeholder=\"Продукт\"/>\r\n\r\n                <input type=\"text\"\r\n                       onChange={callHandleChangeCount.bind(this)}\r\n                       value={props.count}\r\n                       placeholder=\"Количество\"\r\n\r\n                />\r\n                <input type=\"number\"\r\n                       className={\"input-price\"}\r\n                       placeholder=\"Цена\"\r\n                       value={props.price}\r\n                       onChange={callHandleChangePrice.bind(this)}\r\n                />\r\n                <button type={\"submit\"}>Добавить</button>\r\n                <div>Сума: {props.sum} </div>\r\n            </form>\r\n            <div className=\"recipes\">\r\n                {props.recipes.map(recipe => {\r\n                    return <div key={recipe.id} className={\"recipes-item\"}>\r\n                        <span className={\"recipes-item__product\"}>{recipe.product}</span>\r\n                        <span className={\"recipes-item__count\"}>{recipe.count}</span>\r\n                        <span className={\"recipes-item__count\"}>{recipe.price}</span>\r\n                        <span className={\"close\"}\r\n                              onClick={callHandleDeleteProduct.bind(this, recipe)}>&times;</span>\r\n                    </div>\r\n                })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Todo","const ADD_NEW_PRODUCT = 'ADD_NEW_PRODUCT';\r\nconst CHANGE_PRODUCT = 'CHANGE_PRODUCT';\r\nconst DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nconst CHANGE_COUNT = 'CHANGE_COUNT';\r\nconst CHANGE_PRICE = 'CHANGE_PRICE';\r\nconst CALCULATION_ALL_PRODUCT = 'CALCULATION_ALL_PRODUCT';\r\n\r\nexport const DELETE_PRODUCT_CREATOR = (recipe) => ({type: DELETE_PRODUCT, recipe: recipe});\r\nexport const ADD_NEW_PRODUCT_CREATOR = () => ({type: ADD_NEW_PRODUCT});\r\nexport const CHANGE_PRODUCT_CREATOR = (text) => ({type: CHANGE_PRODUCT, text: text});\r\nexport const CHANGE_COUNT_CREATOR = (count) => ({type: CHANGE_COUNT, count: count});\r\nexport const CHANGE_PRICE_CREATOR = (price) => ({type: CHANGE_PRICE, price: price});\r\nexport const CALCULATION_ALL_PRODUCT_CREATOR = () => ({type: CALCULATION_ALL_PRODUCT});\r\n\r\nlet initialState = {\r\n    product: '',\r\n    count: '',\r\n    price: '',\r\n    recipes: [],\r\n    sum: 0,\r\n    id: 1\r\n\r\n}\r\n\r\nconst reducerTodo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_PRODUCT:\r\n\r\n            if(state.product && state.count && state.price){\r\n                debugger\r\n                return {\r\n                    ...state,\r\n                    recipes: [...state.recipes, {product: state.product, count: state.count, price: state.price , id: state.id + 1}],\r\n                    sum:  +state.price + state.sum,\r\n                    product: '',\r\n                    count: '',\r\n                    price: ''\r\n\r\n                };\r\n            }\r\n            return state\r\n\r\n        case CHANGE_PRODUCT:\r\n            return {...state, product: action.text};\r\n        case CHANGE_COUNT:\r\n            return {...state, count: action.count};\r\n        case CHANGE_PRICE:\r\n            return {...state, price: action.price};\r\n        case DELETE_PRODUCT:\r\n            let newState = state.recipes.filter(currentRecipe => {\r\n                return currentRecipe !== action.recipe\r\n            });\r\n            return {...state, recipes: newState, sum: state.sum - action.recipe.price};\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducerTodo","import Todo from \"./Todo\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ADD_NEW_PRODUCT_CREATOR,\r\n    CHANGE_COUNT_CREATOR,\r\n    CHANGE_PRICE_CREATOR,\r\n    CHANGE_PRODUCT_CREATOR,\r\n    DELETE_PRODUCT_CREATOR,\r\n    CALCULATION_ALL_PRODUCT_CREATOR\r\n} from \"../redux/reducerTodo\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        product: state.todo.product,\r\n        count: state.todo.count,\r\n        price: state.todo.price,\r\n        recipes: state.todo.recipes,\r\n        sum: state.todo.sum\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: () => {\r\n            dispatch(ADD_NEW_PRODUCT_CREATOR())\r\n        },\r\n        handleChangeProduct: (text) => {\r\n            dispatch(CHANGE_PRODUCT_CREATOR(text))\r\n        },\r\n        handleChangeCount: (count) => {\r\n            dispatch(CHANGE_COUNT_CREATOR(count))\r\n        },\r\n        handleDeleteProduct: (recipe) => {\r\n            dispatch(DELETE_PRODUCT_CREATOR(recipe))\r\n        },\r\n        handleChangePrice: (price) => {\r\n            dispatch(CHANGE_PRICE_CREATOR(price))\r\n        },\r\n        handleCalculateAllProduct: () => {\r\n            dispatch(CALCULATION_ALL_PRODUCT_CREATOR())\r\n        }\r\n    }\r\n\r\n}\r\nconst TodoContainer = connect(mapStateToProps, mapDispatchToProps)(Todo)\r\nexport default TodoContainer","import React from 'react'\r\nimport './normalize.css'\r\nimport './App.css'\r\nimport TodoContainer from \"./Todo/TodoContainer\";\r\n\r\nconst App = (props) => {\r\n    return (\r\n        <div className='app'>\r\n            <TodoContainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;","import {combineReducers, createStore} from \"redux\";\r\nimport reducerTodo from \"./reducerTodo\";\r\n\r\nlet reducer = combineReducers({\r\n    todo: reducerTodo\r\n})\r\nlet store = createStore(reducer)\r\nexport default store\r\n\r\nwindow.store = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n"],"sourceRoot":""}